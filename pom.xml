<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>your.app</groupId>
	<artifactId>wodocker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>woapplication</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<pluginRepositories>
		<pluginRepository>
			<id>wocommunity.releases</id>
			<name>WOCommunity Releases</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://maven.wocommunity.org/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>wocommunity.releases</id>
			<name>WOCommunity Releases</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://maven.wocommunity.org/content/groups/public/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>wonder.core</groupId>
			<artifactId>ERExtensions</artifactId>
			<version>7.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.32</version>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>Sources</sourceDirectory>
		<testSourceDirectory>Tests</testSourceDirectory>
		<resources>
			<resource>
				<targetPath>Resources</targetPath>
				<filtering>false</filtering>
				<directory>Components</directory>
			</resource>
			<resource>
				<targetPath>Resources</targetPath>
				<filtering>false</filtering>
				<directory>Resources</directory>
			</resource>
			<resource>
				<targetPath>WebServerResources</targetPath>
				<filtering>false</filtering>
				<directory>WebServerResources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>16</source>
					<target>16</target>
					<compilerArgs>
						<compilerArg>--add-exports</compilerArg>
						<compilerArg>java.base/sun.security.action=ALL-UNNAMED</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<?m2e ignore?>
				<groupId>org.objectstyle.woproject.maven2</groupId>
				<artifactId>maven-wolifecycle-plugin</artifactId>
				<version>2.2.1</version>
				<extensions>true</extensions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<!-- https://dzone.com/articles/build-docker-image-from-maven -->
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<!-- Remove existing image from local repo -->
							<execution>
								<id>docker-clean</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Create new docker image using Dockerfile which must be present 
								in current working directory. Tag the image using maven project version information. -->
							<execution>
								<id>docker-build</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>--build-arg</argument>
										<argument>projname=${project.artifactId}</argument>
										<argument>--build-arg</argument>
										<argument>version=${project.version}</argument>
										<argument>-t</argument>
										<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
										<argument>-t</argument>
										<argument>${project.groupId}/${project.artifactId}:latest</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>